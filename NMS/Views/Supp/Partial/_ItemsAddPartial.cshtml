@using KOrders.Core.Resources
@model IEnumerable<KOrders.Data.VendorItem>

@{
    var details = (List<KOrders.Data.VendorItem>)Session["items"];
}
<style type="text/css">
    .paging-nav {
        text-align: right;
        padding-top: 2px;
    }

        .paging-nav a {
            margin: auto 1px;
            text-decoration: none;
            display: inline-block;
            padding: 1px 7px;
            background: #91b9e6;
            color: white;
            border-radius: 3px;
        }

        .paging-nav .selected-page {
            background: #187ed5;
            font-weight: bold;
        }

    .paging-nav,
    #tableData {
        margin: 0 auto;
        font-family: Arial, sans-serif;
    }
</style>

   
<div id="fdetails" class="controls">
    <hr />
    <table id="tableData" class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>
                    #
                </th>

                <th>
                    @Html.DisplayName(NMSRes.itemname)
                </th>
                <th>
                    Packeging
                </th>
                <th>
                    Item Per Package
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < details.ToArray().Length; i++)
            {
                <tr>
                    <td>
                        @Html.Raw(i + 1)
                    </td>
                    <td>
                        <input id="details[@i].Name" class="form-control" value="@details[i].Name" type="text">
                    </td>
                    <td>
                        <input id="details[@i].Package" class="form-control" value="@details[i].Package" type="text">


                    </td>
                    <td>
                        <input id="details[@i].ItemsPerPackage" class="form-control" value="@details[i].ItemsPerPackage" type="text">


                    </td>
                    <td>
                        <input type="button" value="@CommonRes.Delete" class="btn btn-success hvr-bounce-in" onclick="deleteItem(@details[i].ID);" />
                    </td>
                </tr>
            }
        </tbody>
    </table>





</div>


<script src="~/Scripts/Tokeninput/jquery.tokeninput.js" type="text/javascript"></script>
<link href="~/Content/token-input.css" rel="stylesheet" />
<script>

    function valueChanged(_this){
        var triggeredControlID = _this.name;
        var dd =$(_this).val();
        var name = "details[i].APPRAISALGROUPS.APPRAISALGROUPID";
        name = name.replace("[i]","["+triggeredControlID+"]");
        var target = document.getElementById(name);
        $(target).val(dd);

    }

    (function ($) {

        $('#fdetails').find("." + "list-add").click(function (event) {
            handleAdd();
        });
        function handleAdd() {


        };


        $(fdetails).ready(function () {

            //$(".js-example-basic-multiple").select2();

            $('#fdetails').find("." + "list-add").click(function (event) {
                handleAdd();
            });


            $("#fdetails").dynamiclist({
                withEvents: true,


            });


        });

        $('#APPRAISALGROUPS').change(function () {

        });
    })(jQuery);

    //function handleAdd() {
    //    AjaxCall('/CustomerGroupApplication/getSequnce');
    //}
    jQuery(function ($) {
        $.validator.addMethod('date',
        function (value, element) {
            if (this.optional(element)) {
                return true;
            }

            var ok = true;
            try {
                $.datepicker.parseDate('dd/mm/yy', value);
            }
            catch (err) {
                ok = false;
            }
            return ok;
        });
    });


    $("[Date='DatePicker']").datepicker({
        dateFormat: "dd/mm/yy",
        changeMonth: true,
        changeYear: true
    });


    jQuery(function ($) {
        $.validator.addMethod('date',
            function (value, element) {
                if (this.optional(element)) {
                    return true;
                }

                var ok = true;
                try {
                    $.datepicker.parseDate('dd/mm/yy', value);
                }
                catch (err) {
                    ok = false;
                }
                return ok;
            });
    });
</script>
