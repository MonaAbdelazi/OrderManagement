@model NMS.Data.Invoice_Items

@using NMS.Core.Resources

@{
    var message = TempData["AlertMessage"] ?? string.Empty;
    string lang = CommonRes.Lang;
    string reportName = "rptInvoices";
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>استبدال</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <form>


        <div class="row">

            <div class="col-lg-12">

                <div class="panel panel-light-blue">


                    <div class="panel-heading">

                        <h2 class="panel-title">@MenuRes.Title_PurchasedITems</h2>
                    </div>

                    @Html.HiddenFor(model => model.In_Item_ID)
                    @Html.HiddenFor(model => model.Item_ID)
                    <div class="panel-body">
                        <hr />
                        <div class="col-lg-3">
                            @Html.Label(NMSRes.Invoice_ID)

                            @Html.TextBoxFor(model => model.Invoice_ID, new { @class = "form-control", @disabled = "disabled" })
                            
                        </div>
                        @*<div class="col-lg-3">
                            @Html.Label(NMSRes.Item_ID)

                            @Html.TextBoxFor(model => model.Item_ID, new {@id= "oldItem_ID", @class = "form-control" })
                          
                        </div>*@
                        <div class="col-lg-3">
                            @Html.Label(NMSRes.Quantity)

                            @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", @disabled = "disabled" })
                          
                        </div>
                        <div class="col-lg-3">
                            @Html.Label(NMSRes.unit_Price)

                            @Html.TextBoxFor(model => model.unit_Price, new { @id= "OldPrice", @class = "form-control", @disabled = "disabled" })
                          
                        </div>
                        <div class="col-lg-3">
                            @Html.Label(NMSRes.total_Price)

                            @Html.TextBoxFor(model => model.total_Price, new { @id = "total_Price", @class = "form-control", @disabled = "disabled" })
                           
                        </div>
                        <div class="col-lg-3">
                            @Html.Label(NMSRes.itemname)

                            @Html.TextBoxFor(model => model.Item_NameAr, new { @class = "form-control", @disabled = "disabled" })
                            
                        </div>
                     
                    </div>
                        
                        <div class="panel panel-dark">
                            <div class="panel-body">
                               
                                <div class="col-lg-3">
                                    @Html.Label(NMSRes.itemname)
                                    @Html.DropDownList("Item_IDN", null, CommonRes.SelectDropDown, new {@id= "Item_IDN", @Chosen = "Chosen", @class = "form-control", @onchange = "getPrice();" })

                                   
                                </div>
                                <div class="col-lg-1">
                                    @Html.Label(NMSRes.Quantity)
                                    @Html.TextBox("Qunt", string.Empty, new { @class = "form-control", @onchange = "return calc(); comment();" })
                                    @Html.Label("Not Availble Quantity", new { @class = "label-danger", @hidden = "hidden", @id = "err" })

                                   
                                </div>
                                <div class="col-lg-1">
                                    @Html.Label(NMSRes.unit_Price)
                                    @Html.TextBox("Price_Unit", string.Empty, new { @class = "form-control", @onchange = "calc();", @disabled = "disabled" })
                                  
                                   
                                </div>
                                <div class="col-lg-1">
                                    @Html.Label(NMSRes.total_Price)
                                    @Html.TextBox("totalAmount", Model.total_Price, new { @class = "form-control", @disabled = "disabled" })
                                 
                                  
                                </div>
                                <div class="col-lg-3">
                                    @Html.Label(NMSRes.Comment)

                                    @Html.TextAreaFor(model => model.comment, new { @id= "comment",@class = "form-control" })
                                 
                                </div>
                                <div class="col-lg-3">
                                    @Html.Label(NMSRes.RemainedAmount)

                                    @Html.TextBox("RemainedAmount", string.Empty, new { @id = "RemainedAmount", @class = "form-control" })

                                </div>
                            </div>
                        </div>


                        <div class="form-group">

                            <center class="mgtp">

                                <input type="submit" value="@CommonRes.Button_Save"  onclick="return enable();" class="btn btn-primary hvr-bounce-in" />
                                &nbsp;
                                @Html.ActionLink(CommonRes.BackToList, "Save", null, new { @class = "btn btn-warning hvr-bounce-in" })

                            </center>

                        </div>
                    </div>
              

            </div>
        </div>

    </form>
                                    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script type="text/javascript">

        function enable() {

            document.getElementById("totalAmount").disabled = false;
            document.getElementById("Price_Unit").disabled = false;
            document.getElementById("oldItem_ID").disabled = false;
            

        }
        function calc(_this) {
            var Qunt = $('#Qunt').val();
            var Cost = $('#Price_Unit').val();
            var totalInvoice = $('#Total_Price').val();
            var tax = $('#Tax_NoFor_Comp').val();
            var Item_ID = $('#Item_IDN').val();
            var input = { Item_ID: $('#Item_IDN').val(), Qunt: Qunt };
            $.ajax({
                url: '/Invoices/checkQuantity',
                type: "POST",
                data: JSON.stringify(input),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data == "OK") {
                        if (Qunt != null && Cost != null) {
                            var q = new Number(Qunt);
                            var c = new Number(Cost);
                            var tot = new Number(totalInvoice);
                            var tx = new Number(tax);
                            var result = q * c;
                            tot += result;
                            tx = 0.17 * tot;
                            $('#totalAmount').val(result);
                            $('#Total_Price').val(tot);
                            $('#Tax_NoFor_Comp').val(tx);
                            $('#err').hide();
                        }
                    } else {
                        $('#err').show();
                        //   $('#id').removeAttr()
                        var triggeredControlID = _this.name;
                        var dd = $(_this).val();
                        var name = "items[i].Qunt";
                        name = name.replace("[i]", "[" + triggeredControlID + "]");
                        var target = document.getElementById(name);
                        $(target).val(dd);
                        _this.val(" ");
                    }
                },
                error: function () {
                }
            });
        }

    

        function getPrice() {
            var Item_ID = $('#Item_IDN').val();
            var input = { Item_ID: $('#Item_IDN').val() };
            $.ajax({
                url: '/Invoices/getPrice',
                type: "POST",
                data: JSON.stringify(input),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //target.html(data);  HOLIDAYHOURS NOMINALHOURS
                    $('#Price_Unit').val(data);


                },
                error: function () {
                }
            });



        }



        function GenerateReport() {

            ShowReport(
                {

                    Status: $('#Status').val(),


                }, "/Invoices/GetReport/", "@reportName", "@CommonRes.Lang");


        }
        function GenerateReportss() {
            var input = { Export: "PDF" };

            $.ajax({
                url: '/Invoices/GetInvoiceReport/',
                data: JSON.stringify(input),
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                success: function (data) {

                    if (data == true) {
                        window.open("/ReportView/ViewReport?strReportName=" + "rptInvoiceData", 'mywindow', 'fullscreen=yes, scrollbars=auto');
                    } else {
                       // if (lan == "ar") {
                            ShowFeedback("لا توجد بيانات لعرضها", "خطأ", "Error");
                        //} else {
                          //  ShowFeedback("No Data To show", "Error", "Error");
                        //}
                    }

                }
            });
            //ShowReport({ Export: "PDF" }, "/Invoices/GetInvoiceReport/", "rptInvoiceData", "@CommonRes.Lang");


        }
        $('#comment').change(function () {

            var totalAmount = $('#totalAmount').val();
            var total_Price = $('#total_Price').val();
            var To = new Number(totalAmount);
            var TP = new Number(total_Price);
            var result = To - TP;
            var x = "يجب دفع فرق " + result;
            $('#comment').val(x);
            $('#RemainedAmount').val(result)
            
        });

    </script>
    <script type="text/javascript">

        var message = '@message';
    if (message) {
        GenerateReport();
         alert(message);

    }
    //GenerateReport();
    // alert(message);

   // }

    </script>
}
